package com.wmren.notemd.staticfile;

public class NoteExample {
    public static final String noteTitle = "Markdown 快速入门";
    public static final String noteContent = "看起来有些混乱？先点击右上角最右侧按钮进入预览模式。\n" +
            "\n" +
            "## 主要内容\n" +
            "\n" +
            "> #### Markdown*是什么*？\n" +
            "> #### *谁*创造了它？\n" +
            "> #### *为什么*要使用它？\n" +
            "> #### *怎么*使用？\n" +
            "> #### *谁*在用？\n" +
            "> #### 尝试一下\n" +
            "\n" +
            "## 正文\n" +
            "### 1. Markdown*是什么*？\n" +
            "**Markdown**是一种轻量级**标记语言**，它以纯文本形式(*易读、易写、易更改*)编写文档，并最终以HTML格式发布。\n" +
            "**Markdown**也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。\n" +
            "\n" +
            "### 2. *谁*创造了它？\n" +
            "它由[**Aaron Swartz**](http://www.aaronsw.com/)和**John Gruber**共同设计，**Aaron Swartz**就是那位于去年（*2013年1月11日*）自杀,有着**开挂**一般人生经历的程序员。维基百科对他的[介绍](http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8)是：**软件工程师、作家、政治组织者、互联网活动家、维基百科人**。    \n" +
            "\n" +
            "他有着足以让你跪拜的人生经历：\n" +
            "\n" +
            "+ **14岁**参与RSS 1.0规格标准的制订。\n" +
            "+ **2004**年入读**斯坦福**，之后退学。\n" +
            "+ **2005**年创建[Infogami](http://infogami.org/)，之后与[Reddit](http://www.reddit.com/)合并成为其合伙人。\n" +
            "+ **2010**年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。\n" +
            "+ **2011**年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。\n" +
            "+ **2013**年1月自杀身亡。\n" +
            "\n" +
            "![Aaron Swartz](https://github.com/younghz/Markdown/raw/master/resource/Aaron_Swartz.jpg)\n" +
            "\n" +
            "天才都有早逝的归途。\n" +
            "\n" +
            "### 3. *为什么*要使用它？\n" +
            "\n" +
            "+ 它是易读（看起来舒服）、易写（语法简单）、易更改**纯文本**。处处体现着**极简主义**的影子。\n" +
            "+ 兼容HTML，可以转换为HTML格式发布。\n" +
            "+ 跨平台使用。\n" +
            "+ 越来越多的网站支持Markdown。\n" +
            "+ 更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）\n" +
            "+ 摆脱Word（我不是认真的）。\n" +
            "\n" +
            "### 4. *怎么*使用？\n" +
            "如果不算**扩展**，Markdown的语法绝对**简单**到让你爱不释手。\n" +
            "\n" +
            "Markdown语法主要分为如下几大部分：\n" +
            "**标题**，**段落**，**区块引用**，**代码区块**，**强调**，**列表**，**分割线**，**链接**，**图片**，**反斜杠 `\\`**，**符号'`'**。\n" +
            "\n" +
            "#### 4.1 标题\n" +
            "两种形式：  \n" +
            "1）使用`=`和`-`标记一级和二级标题。\n" +
            "\n" +
            "> 一级标题   \n" +
            "> `=========`   \n" +
            "> 二级标题    \n" +
            "> `---------`\n" +
            "\n" +
            "效果：\n" +
            "\n" +
            "> 一级标题   \n" +
            "> =========   \n" +
            "> 二级标题\n" +
            "> ---------  \n" +
            "\n" +
            "2）使用`#`，可表示1-6级标题。\n" +
            "\n" +
            "> \\# 一级标题   \n" +
            "> \\## 二级标题   \n" +
            "> \\### 三级标题   \n" +
            "> \\#### 四级标题   \n" +
            "> \\##### 五级标题   \n" +
            "> \\###### 六级标题    \n" +
            "\n" +
            "效果：\n" +
            "\n" +
            "> # 一级标题   \n" +
            "> ## 二级标题   \n" +
            "> ### 三级标题   \n" +
            "> #### 四级标题   \n" +
            "> ##### 五级标题   \n" +
            "> ###### 六级标题\n" +
            "\n" +
            "#### 4.2 段落\n" +
            "段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用**两个以上**空格加上回车（引用中换行省略回车）。\n" +
            "\n" +
            "#### 4.3 区块引用\n" +
            "在段落的每行或者只在第一行使用符号`>`,还可使用多个嵌套引用，如：\n" +
            "\n" +
            "> \\> 区块引用  \n" +
            "> \\>> 嵌套引用  \n" +
            "\n" +
            "效果：\n" +
            "\n" +
            "> 区块引用  \n" +
            ">> 嵌套引用\n" +
            "\n" +
            "#### 4.4 代码区块\n" +
            "代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如    \n" +
            "普通段落：\n" +
            "\n" +
            "void main()    \n" +
            "{    \n" +
            "    printf(\"Hello, Markdown.\");    \n" +
            "}    \n" +
            "\n" +
            "代码区块：\n" +
            "\n" +
            "    void main()\n" +
            "    {\n" +
            "        printf(\"Hello, Markdown.\");\n" +
            "    }\n" +
            "\n" +
            "**注意**:需要和普通段落之间存在空行。\n" +
            "\n" +
            "#### 4.5 强调\n" +
            "在强调内容两侧分别加上`*`或者`_`，如：\n" +
            "\n" +
            "> \\*斜体\\*，\\_斜体\\_    \n" +
            "> \\*\\*粗体\\*\\*，\\_\\_粗体\\_\\_\n" +
            "\n" +
            "效果：\n" +
            "\n" +
            "> *斜体*，_斜体_    \n" +
            "> **粗体**，__粗体__\n" +
            "\n" +
            "#### 4.6 列表\n" +
            "使用`·`、`+`、或`-`标记无序列表，如：\n" +
            "\n" +
            "> \\-（+\\*） 第一项\n" +
            "> \\-（+\\*） 第二项\n" +
            "> \\- （+\\*）第三项\n" +
            "\n" +
            "**注意**：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。\n" +
            "\n" +
            "效果：\n" +
            "\n" +
            "> + 第一项\n" +
            "> + 第二项\n" +
            "> + 第三项\n" +
            "\n" +
            "有序列表的标记方式是将上述的符号换成数字,并辅以`.`，如：\n" +
            "\n" +
            "> 1 . 第一项   \n" +
            "> 2 . 第二项    \n" +
            "> 3 . 第三项    \n" +
            "\n" +
            "效果：\n" +
            "\n" +
            "> 1. 第一项\n" +
            "> 2. 第二项\n" +
            "> 3. 第三项\n" +
            "\n" +
            "#### 4.7 分割线\n" +
            "分割线最常使用就是三个或以上`*`，还可以使用`-`和`_`。\n" +
            "\n" +
            "#### 4.8 链接\n" +
            "链接可以由两种形式生成：**行内式**和**参考式**。    \n" +
            "**行内式**：\n" +
            "\n" +
            "> \\[younghz的Markdown库\\]\\(https:://github.com/younghz/Markdown \"Markdown\"\\)。\n" +
            "\n" +
            "效果：\n" +
            "\n" +
            "> [younghz的Markdown库](https:://github.com/younghz/Markdown \"Markdown\")。\n" +
            "\n" +
            "**参考式**：\n" +
            "\n" +
            "> \\[younghz的Markdown库1\\]\\[1\\]    \n" +
            "> \\[younghz的Markdown库2\\]\\[2\\]    \n" +
            "> \\[1\\]:https:://github.com/younghz/Markdown \"Markdown\"    \n" +
            "> \\[2\\]:https:://github.com/younghz/Markdown \"Markdown\"    \n" +
            "\n" +
            "效果：\n" +
            "\n" +
            "> [younghz的Markdown库1][1]    \n" +
            "> [younghz的Markdown库2][2]\n" +
            "\n" +
            "[1]: https:://github.com/younghz/Markdown \"Markdown\"\n" +
            "[2]: https:://github.com/younghz/Markdown \"Markdown\"\n" +
            "\n" +
            "#### 4.9 图片\n" +
            "添加图片的形式和链接相似，只需在链接的基础上前方加一个`！`。\n" +
            "#### 4.10 反斜杠`\\`\n" +
            "相当于**反转义**作用。使符号成为普通符号。\n" +
            "#### 4.11 符号'`'\n" +
            "起到标记作用。如：\n" +
            "\n" +
            ">\\`ctrl+a\\`\n" +
            "\n" +
            "效果：\n" +
            "\n" +
            ">`ctrl+a`    \n" +
            "\n" +
            "#### 5. *谁*在用？\n" +
            "Markdown的使用者：\n" +
            "\n" +
            "+ GitHub\n" +
            "+ 简书\n" +
            "+ Stack Overflow\n" +
            "+ Apollo\n" +
            "+ Moodle\n" +
            "+ Reddit\n" +
            "+ 等等\n" +
            "\n" +
            "#### 6. 尝试一下\n" +
            "\n" +
            "+ **Chrome**下的插件诸如`stackedit`与`markdown-here`等非常方便，也不用担心平台受限。\n" +
            "+ **在线**的dillinger.io评价也不错   \n" +
            "+ **Windowns**下的MarkdownPad也用过，不过免费版的体验不是很好。    \n" +
            "+ **Mac**下的Mou是国人贡献的，口碑很好。\n" +
            "+ **Linux**下的ReText不错。    \n" +
            "\n" +
            "**当然，最终境界永远都是笔下是语法，心中格式化 :)。**\n" +
            "\n" +
            "****\n" +
            "**注意**：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。\n" +
            "虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]\n" +
            "(http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/ )。\n" +
            "****\n" +
            "以上基本是所有traditonal markdown的语法。\n" +
            "\n" +
            "关于其它扩展语法可参见具体工具的使用说明。\n";

    public static final String defaultTitle = "欢迎来到 Note Markdown！";
    public static final String defaultContent = "看起来有些混乱？先点击右上角最右侧按钮进入预览模式。\n" +
            "\n" +
            "**欢迎使用noteMD记事本！这是你的第一条便签。删除它或者修改它，然后继续你的记录吧。**\n" +
            "\n" +
            "#### 如何使用noteMD\n" +
            "当你在主页点击一条笔记之后，软件随即便进入了编辑模式。你可以在这里编辑便签的标题与内容。\n" +
            "\n" +
            "你可以在屏幕最下方看到一排工具栏，在这里你可以快速插入一些预定的格式。你可能会对点击按钮产生的字符感到疑惑，这与markdown的语法相关。不妨查看另一篇预设便签学习简单的markdown语法。\n" +
            "\n" +
            "你可以左右拖动下方工具栏查看更多功能。工具栏提供的功能有（从左到右依次）：\n" +
            "\n" +
            "- 添加标题\n" +
            "- 添加引用\n" +
            "- 添加图片（相机/本地相册）\n" +
            "- 添加超链接\n" +
            "- 添加代码块\n" +
            "- 添加无序列表\n" +
            "- 添加复选框\n" +
            "- 设置斜体\n" +
            "- 设置粗体\n" +
            "- 设置删除线\n" +
            "\n" +
            "#### 编辑模式与预览模式\n" +
            "markdown语言可以通过解析器解析为漂亮的html页面。当你处于编辑页面时，你可以注意到屏幕右上角有三个按钮。左侧按钮用于删除便签，**中间**按钮代表**编辑模式**，你可以在这个模式下修改便签的标题与内容。**右侧**按钮代表**预览模式**，你可以在这个模式下看到markdown文本解析得到的结果。你可以点击两个按钮在不同模式之间进行切换。\n" +
            "\n" +
            "#### 保存和删除便签\n" +
            "当你创建或修改便签后，只需按下回退键或屏幕左上的返回键，软件会自动存储便签。如果你希望删除一个便签，你可以在软件主界面长按便签进行删除，或者在编辑界面点击右上方导航栏的删除按钮进行删除。\n" +
            "\n" +
            "#### 搜索便签\n" +
            "你可以点击主界面右上角搜索按钮对便签进行查找。\n" +
            "\n" +
            "#### 导出与分享便签\n" +
            "`work in progress`";
}
